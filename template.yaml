AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-music-directory

  Sample SAM Template for sam-music-directory

Globals:
  Function:
    Runtime: java8
    Timeout: 20
    MemorySize: 512
    Environment:
      Variables:
        ARTISTS_TABLE: !Ref ArtistsTable

Resources:
  ArtistsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
  CreateArtistFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MusicDirectoryFunction
      Handler: musicDirectory.functions.CreateArtistFunction::create
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ArtistsTable
      Events:
        MusicDirectory:
          Type: Api
          Properties:
            Path: /artist
            Method: POST
  GetAllArtistFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MusicDirectoryFunction
      Handler: musicDirectory.functions.GetAllArtistsFunction::getAll
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ArtistsTable
      Events:
        MusicDirectory:
          Type: Api
          Properties:
            Path: /artist
            Method: GET
  GetArtistFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MusicDirectoryFunction
      Handler: musicDirectory.functions.GetArtistFunction::get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ArtistsTable
      Events:
        MusicDirectory:
          Type: Api
          Properties:
            Path: /artist/{id}
            Method: GET
  UpdateArtistFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MusicDirectoryFunction
      Handler: musicDirectory.functions.UpdateArtistFunction::update
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ArtistsTable
      Events:
        MusicDirectory:
          Type: Api
          Properties:
            Path: /artist/{id}
            Method: PUT
  DeleteArtistFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MusicDirectoryFunction
      Handler: musicDirectory.functions.DeleteArtistFunction::delete
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ArtistsTable
      Events:
        MusicDirectory:
          Type: Api
          Properties:
            Path: /artist/{id}
            Method: DELETE

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for MusicDirectory function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/artist/"
  CreateArtistFunction:
    Description: "CreateArtistFunction Lambda ARN"
    Value: !GetAtt CreateArtistFunction.Arn
  CreateArtistFunctionIamRole:
    Description: "Implicit IAM Role created for MusicDirectory function"
    Value: !GetAtt CreateArtistFunctionRole.Arn